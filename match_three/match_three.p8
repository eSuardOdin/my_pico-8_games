pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
function _init()
init_game()
end

function _update()
manage_player()
f+=1
end

function _draw()
draw_board()
draw_player()
end
-->8
-- init functions
function init_game()
f=0
brd=init_brd()
p={x=0,y=0,s={sel=false,x=0,y=0}}
t=0
end

function init_brd()
 local board = {}
 for i=1,6 do
  board[i] = {}
  for j=1,6 do
   local col
   repeat
    col=flr(rnd(4))+1
    until not (
    (j >= 3 and col== board[i][j-1] and col==board[i][j-2]) or
    (i >= 3 and col== board[i-1][j] and col==board[i-2][j]))
     board[i][j] = col
   end
  end
 return board
end
-->8
-- update functions
function manage_player()
if p.s.sel==false then
	if btnp(‚¨ÜÔ∏è)and p.y>0then
  p.y-=1
	elseif btnp(‚¨áÔ∏è)and p.y<5then
  p.y+=1
	elseif btnp(‚û°Ô∏è)and p.x<5then
  p.x+=1
	elseif btnp(‚¨ÖÔ∏è)and p.x>0then
  p.x-=1
 elseif btnp(‚ùé) then
  p.s.sel=true
  p.s.x=p.x
  p.s.y=p.y
 end
else
 if btnp(üÖæÔ∏è)then
  p.s.sel=false
 elseif btnp(‚¨ÜÔ∏è)and p.s.y<=p.y and p.s.x==p.x then
  p.y-=1
 elseif btnp(‚¨áÔ∏è)and p.s.y>=p.y and p.s.x==p.x then
  p.y+=1
 elseif btnp(‚¨ÖÔ∏è)and p.s.x<=p.x and p.s.y==p.y then
  p.x-=1
 elseif btnp(‚û°Ô∏è)and p.s.x>=p.x and p.s.y==p.y then
  p.x+=1
 elseif btnp(‚ùé) then
 swap(p.s.x+1,p.s.y+1,p.x+1,p.y+1)
 update_turn()
 proceed_match(p.x,p.y,get_contiguous(p.x,p.y))
 proceed_match(p.s.x,p.s.y,get_contiguous(p.s.x,p.s.y))
 p.s.sel=false 
 end
end
end

function update_turn()
t+=1
end

function get_contiguous(x,y)
local c=brd[x+1][y+1]
local y_a=1
local x_a=1
local x_i=x+1
local y_i=y+1
while (x_i!=1and brd[x_i][y+1]==c) do
  x_i-=1
  if(brd[x_i][y+1]==c)then
   x_a+=1
  else break
  end
end
x_i=x+1
while (x_i!=6and brd[x_i][y+1]==c) do
  x_i+=1
  if(brd[x_i][y+1]==c)then
   x_a+=1
  else break
  end
end
printh('---')
printh("largeur: " .. x_a)
while (y_i!=1and brd[x+1][y_i]==c) do
  y_i-=1
  if(brd[x+1][y_i]==c)then
   y_a+=1
  else break
  end
end
y_i=y+1
while (y_i!=6and brd[x+1][y_i]==c) do
  y_i+=1
  if(brd[x+1][y_i]==c)then
   y_a+=1
  else break
  end
end
printh("longueur: " .. y_a)


return x_a,y_a
end

function proceed_match(x,y,x_a,y_a)
if x_a<3and y_a<3 then return end
if x_a>=3then
 local i=x+1
 while i!=6and brd[i+1][y+1]==brd[x+1][y+1]do
  brd[i+1][y+1]=7
  x_a-=1
  i+=1
 end
 local i=x+1
 while i!=1and brd[i-1][y+1]==brd[x+1][y+1]do
  brd[i-1][y+1]=7
  x_a-=1
  i-=1
 end
end
if y_a>=3then
 local i=y+1
 while i!=6and brd[x+1][i+1]==brd[x+1][y+1]do
  brd[x+1][i+1]=7
  y_a-=1
  i+=1
 end
 local i=y+1
 while i!=1and brd[x+1][i-1]==brd[x+1][y+1]do
  brd[x+1][i-1]=7
  y_a-=1
  i-=1
 end
end
brd[x+1][y+1]=7
y_a-=1
x_a-=1
if y_a!=0or x_a!=0 then printh('error')
end

end
-->8
-- draw functions
function draw_board()
cls()
local row=0
for y=1,6 do
 for x=1,6 do
  if p.s.sel and
   (
      (p.s.y+1 == y and (p.s.x+1 == x-1 or p.s.x+1 == x+1)) or
      (p.s.x+1 == x and (p.s.y+1 == y-1 or p.s.y+1 == y+1))
   ) and f%30<15then
  else
   spr(brd[x][y],(x-1)*10,(y-1)*10)
  end
 end
end
print("turn: " .. t,0,61)
end

function draw_player()
if(p.s.sel)then
 spr(6, p.s.x*10, p.s.y*10)
end
 spr(5, p.x*10, p.y*10)
end

-->8
-- helper functions
function swap(sx,sy,dx,dy)
box=brd[dx][dy]
brd[dx][dy]=brd[sx][sy]
brd[sx][sy]=box
end
__gfx__
000000000011110000bbbb00009999000088880077777777eeeeeeee000000000000000000000000000000000000000000000000000000000000000000000000
00000000011111100b77bbb0097779900878888070000007e000000e555555550000000000000000000000000000000000000000000000000000000000000000
0070070011177111b7bb7bbb999997998878888870000007e000000e000000000000000000000000000000000000000000000000000000000000000000000000
0007700011717111bbbb7bbb999779998878888870000007e000000e555555550000000000000000000000000000000000000000000000000000000000000000
0007700011117111bbb7bbbb999997998878788870000007e000000e000000000000000000000000000000000000000000000000000000000000000000000000
0070070011117111bb7bbbbb999997998877778870000007e000000e555555550000000000000000000000000000000000000000000000000000000000000000
0000000001117110077777b0097779900888788070000007e000000e000000000000000000000000000000000000000000000000000000000000000000000000
000000000011110000bbbb00009999000088880077777777eeeeeeee555555550000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000011110000bbbb0000999900008888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000011111100bbbbbb009999990088888800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000011111100bbbbbb009999990088888800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000011111100bbbbbb009999990088888800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000011111100bbbbbb009999990088888800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000011110000bbbb0000999900008888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000777777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000777777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0508171c0808081c0808081c0808081c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0700171700000017000000170000001700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0a0a151700000017000000170000001700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0c0a0a150a0a0a150a0a0a150a0a0a1500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0700001700000017000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0700001700000017000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0700001700000017000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0c0a0a150a0a0a150a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
